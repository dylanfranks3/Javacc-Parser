PARSER_BEGIN(Assignment)

public class Assignment {
    public static void main(String[] args) {
        try {
            new Assignment(new java.io.StringReader(args[0])).Start();
            System.out.println("Syntax is okay");
        } catch (Throwable e) {
            // Catching Throwable is ugly but JavaCC throws Error objects!
            System.out.println("Syntax check failed: " + e.getMessage());
        }
    }
}

PARSER_END(Assignment)

SKIP: { "\t" | "\n" | "\r" }
TOKEN: { 
    "(" | ")" | "{" | "}" | ";" | "DEF" |
    <MAIN: ("MAIN")> |
    <NUM: (["1"-"9"])+(["0"-"9"])*> |
    <PLUS: ("+")> | <MULT: ("*")> |
    <SPACE: (" ")> | <FUNCNAME: (["A"-"Z"])+> |
    <PARAM: (["a"-"z"])+> }
   




void Start():{}
  {
    F() <EOF>}

void F(): {}  //this is to be able to seperate each line and determine whether it's a main func of general func (mf/gf resp.)
    
    {
    WHICHFUNC() }


void WHICHFUNC():{}

{
   LOOKAHEAD(3)  "DEF" <SPACE> GF() | "DEF" <SPACE> MF()}

void MF():{}

{
    <MAIN> <SPACE> "{" <SPACE> EXP() <SPACE> "}" <SPACE> ";"}

void GF():{}

{
   <FUNCNAME> <SPACE> <PARAM> <SPACE> "{" <SPACE> EXP() <SPACE> "}" <SPACE> ";"}


void EXP():{}
{
    <NUM>
}