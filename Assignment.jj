PARSER_BEGIN(Assignment)

public class Assignment {
    private static boolean mainDefined = false;
    
    public static void main(String[] args) {
        try {
            Assignment parser = new Assignment(System.in);
            parser.Start();
            System.out.println("Syntax is perfecto, well done sir");
        } catch (Throwable e) {
            // Catching Throwable is ugly but JavaCC throws Error objects!
            System.out.println("Syntax check failed: " + e.getMessage());
        }
    }
}

PARSER_END(Assignment)


TOKEN: { 
    "(" 
    | ")" 
    | "{" 
    | "}" 
    | ";" 
    | "DEF" 
    | <MAIN: ("MAIN")> 
    | <NUM: ((["1"-"9"])+(["0"-"9"])*) | "0">  //either a 0 or a positive number number 
    | <PLUS: ("+")> 
    | <MULT: ("*")> 
    | <SPACE: (" ")> 
    | <FUNCNAME: (["A"-"Z"])+> 
    | <PARAM: (["a"-"z"])+> 
    | < EOL: "\n" > }
    
void Start():{}

{ splitLines() <EOF>

 }
    
void splitLines():{} //this is to be able to separate each line and determine whether it's a main func of general func (mf/gf resp.)
{
    ("DEF" <SPACE> WHICHFUNC() <SPACE> ";" <EOL>)+
}
    
void WHICHFUNC():{} //determining whether the line is a function def or a main def
{
   LOOKAHEAD(2)   GF() |  MF()
}

void MF ():{} //grammar for the main function
{
    {   
        if (mainDefined) {
            throw new ParseException("Main function can only be defined once");
        } else {
            mainDefined = true;
        }
    }
    <MAIN> <SPACE> "{" <SPACE> EXPMAIN() <SPACE> "}"
}

void GF():{Token param;} //grammar for a general function
{
    <FUNCNAME> <SPACE> 
    param = <PARAM>
    <SPACE> "{" <SPACE> EXP(param) <SPACE> "}"

    {System.out.println(param);}
}

void EXP(Token p):{}  //this is whatever can be within the braces of func definition, the body of a function declaration. TODO, the body must contain parameters called in fun
{
    (FUNCCALL(p) | <NUM> | <PARAM> )
    ( (<MULT> | <PLUS>) ( FUNCCALL(p) | <NUM> | <PARAM> ))*
}

void EXPMAIN():{}  //this is whatever can be within the braces of func definition, the body of a function declaration. TODO, the body must contain parameters called in fun
{
    (FUNCCALLMAIN() | <NUM> )
    ( (<MULT> | <PLUS>) ( FUNCCALLMAIN() | <NUM> ))*
}

void FUNCCALL(Token p):{} //this the syntax of a call to a function, which would be within the body of a function decl i.e foo(bar()*5)) 
{
    <FUNCNAME> "(" EXP(p) ")"
}

void FUNCCALLMAIN():{} //this the syntax of a call to a main function, which would be within the body of a function decl i.e foo(bar()*5)) 
{
    <FUNCNAME> "(" EXPMAIN() ")"
}